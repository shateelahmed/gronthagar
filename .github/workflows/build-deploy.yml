name: Build and Deploy Code

run-name: ${{ github.actor }} started the action by making a ${{ github.event_name }} üöÄ

on: [push, pull_request]

jobs:

  build:
    environment:
      name: testing
    env:
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Build the stack
        run: docker-compose up -d --build
      - name: Test
        run: docker exec -u www gronthagar-backend pytest
      - run: echo "üçè This job's status is ${{ job.status }}."

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production
    steps:
      - name: ssh to ubuntu server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          password: ${{secrets.PROD_PASSWORD}}
      - name: Deploy
        run: docker-compose up -d
        env:
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}
          DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
          DATABASE_PORT: ${{secrets.DATABASE_PORT}}
          DATABASE_NAME: ${{secrets.DATABASE_NAME}}
          DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
          DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
